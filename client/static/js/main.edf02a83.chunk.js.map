{"version":3,"sources":["components/Login.js","components/Header/Dialog/Dialog.js","components/Header/Header.js","components/Content/Stats/DataDialog/DataDialog.js","components/Content/Graph/Graph.js","components/Content/Stats/Stats.js","components/Content/Add/AddDialog/AddDialog.js","components/Content/Add/Add.js","components/Content/Options/Wtf/Wtf.js","components/Content/Options/Options.js","components/Content/Content.js","components/Nothing.js","App.js","serviceWorker.js","index.js","init.js"],"names":["name","Login","props","React","useState","disabled","setDisabled","submitHandle","a","async","axios","post","user","status","window","location","href","alert","useEffect","document","title","className","Paper","TextField","label","variant","fullWidth","onKeyDown","e","keyCode","length","onChange","target","value","autoFocus","Button","color","onClick","category","graph","valueType","FormDialog","state","categoryHelper","categoryError","graphHelper","graphError","event","values","this","setState","isValid","Dialog","open","onClose","dialogClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Autocomplete","options","categories","getOptionLabel","option","style","padding","freeSolo","onCategorySelect","bind","renderInput","params","required","error","helperText","onChangeCategory","onChangeGraph","DialogActions","newGraph","Component","Header","graphs_button","anchorEl","setAnchorEl","setOpen","menu_items","graphs","data","map","obj","index","push","key","indexx","MenuItem","onGraphChange","currentTarget","AppBar","position","Toolbar","Typography","Menu","keepMounted","Boolean","Graph","getLabel","domain","selectedDomain","zoomDomain","gym","datum","y","width","height","scale","x","animate","duration","onLoad","left","top","right","bottom","containerComponent","voronoiDimension","labels","getLineLabel","labelComponent","cornerRadius","flyoutStyle","fill","stroke","dependentAxis","tickFormat","t","Math","round","fixLabelOverlap","axis","ticks","tickLabels","standalone","DataDialog","placeholder","multiline","rows","rowsMax","defaultValue","JSON","stringify","graphUpdate","weightType","Stats","dialogClick","Divider","getDate","getExtra","getLast","max","o","ind","getHighest","lowest","getLowest","reduce","r","c","date","toLocaleDateString","special_data","thing","weight","reps","sets","special","AddDialog","Date","handleDateChange","handleNormalForm","validateNumber","console","log","newValue","extrafield","extrafields","type","margin","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","onSubmit","num","parseInt","isNaN","Add","Fab","aria-label","Wtf","dialogDone","Options","dir","delete","Content","stats","isGym","Nothing","App","first","current","getData","g","saveData","newGraphParse","category_index","graph_index","cat","grf","splice","nothing","parsed","parse","content","header","newcategory","new_graph","get","res","msg","hostname","match","ReactDOM","render","exact","path","component","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edf02a83.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\n\r\nlet name='';\r\n\r\nexport default function Login(props) {\r\n\r\n    const [disabled, setDisabled] = React.useState(true);\r\n\r\n    React.useEffect(()=>{\r\n        document.title=\"Login\";\r\n    })\r\n    \r\n    function onInput(e){\r\n        name = e.target.value;\r\n        if(name.length === 0)\r\n            setDisabled(true);\r\n        else\r\n            setDisabled(false);\r\n    }\r\n\r\n    function keyPress(e){\r\n        if(e.keyCode === 13 && name.length > 0){\r\n            submitHandle();\r\n         }\r\n    }\r\n    async function submitHandle(){\r\n        try{\r\n            let res = await axios.post('/api/auth',{user: name});\r\n            if(res.status)\r\n                window.location.href='/app';\r\n            else\r\n                alert(\"error\");\r\n        }\r\n        catch{\r\n            alert(\"error\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <Paper className={'login-paper'}>\r\n                <div className='login-content'>\r\n                    <TextField label=\"Name\" variant=\"outlined\" fullWidth onKeyDown={keyPress} onChange={onInput} autoFocus/>\r\n                </div>\r\n                <div className='login-actions'>\r\n                    <Button variant=\"contained\"  color=\"primary\" disabled={disabled} onClick={submitHandle}>Enter</Button>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport '../../../App.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nlet category='';\r\nlet graph = '';\r\nlet valueType='';\r\nlet disabled = true;\r\n\r\nexport default class FormDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { categoryHelper: '', categoryError: false, graphHelper: '', graphError: false };\r\n    }\r\n\r\n    onCategorySelect(event,values){\r\n        if(values != null){\r\n            this.setState({ categoryHelper: '', categoryError: false });\r\n            category = values;\r\n            disabled=!this.isValid();\r\n        }\r\n        else{\r\n            disabled=true;\r\n            category = '';\r\n        }\r\n    }\r\n\r\n    onChangeCategory(event) {\r\n        if (event.target.value.length > 0) {\r\n          this.setState({ categoryHelper: '', categoryError: false });\r\n          disabled = false;\r\n          category = event.target.value;\r\n          disabled=!this.isValid();\r\n        } \r\n        else {\r\n          this.setState({ categoryHelper: 'give it a name', categoryError: true });\r\n          disabled = true;\r\n          category = '';\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    onChangeGraph(event) {\r\n        if (event.target.value.length > 0) {\r\n            this.setState({ graphHelper: '', graphError: false });\r\n            graph = event.target.value;\r\n            disabled=!this.isValid();\r\n        } \r\n        else {\r\n          this.setState({ graphHelper: 'give it a name', graphError: true });\r\n          disabled=true;\r\n          graph = '';\r\n        }\r\n    }\r\n\r\n    isValid()\r\n    {\r\n        return ( category.length > 0  && graph.length > 0 )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n            <Dialog open={this.props.open} onClose={this.props.dialogClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add graph</DialogTitle>\r\n                <DialogContent className=\"graph-add-content\">\r\n                    <DialogContentText>\r\n                        Make a new graph\r\n                    </DialogContentText>\r\n\r\n                    <Autocomplete\r\n                        id=\"category\"\r\n                        options={this.props.categories}\r\n                        getOptionLabel={option => option}\r\n                        style={{  padding: '0 0 30px 0' }}\r\n                        freeSolo\r\n                        onChange={this.onCategorySelect.bind(this)}\r\n                        renderInput={params => (\r\n                            <TextField {...params} required label=\"Category\" variant=\"outlined\" fullWidth\r\n                            error={this.state.categoryError} helperText={this.state.categoryHelper} onChange={this.onChangeCategory.bind(this)}/>\r\n                        )}\r\n                    />\r\n\r\n                    <TextField required label=\"Graph\" variant=\"outlined\" fullWidth style={{  padding: '0 0 30px 0' }}\r\n                    error={this.state.graphError} helperText={this.state.graphHelper}  onChange={this.onChangeGraph.bind(this)}/>\r\n\r\n                    <TextField label=\"type\" variant=\"outlined\" fullWidth \r\n                     helperText={'example: kg, minutes'}  onChange={(e)=> valueType = e.target.value}/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.dialogClose} color=\"primary\">\r\n                        nah\r\n                </Button>\r\n                    <Button onClick={() => this.props.newGraph(category,graph,valueType)} disabled ={disabled}\r\n                    color=\"primary\">\r\n                        Create\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            </div >\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../../App.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormDialog from './Dialog/Dialog';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nfunction Header(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const dialogClick = () => {\r\n       setOpen(true);\r\n    };\r\n    const dialogClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function handleOption(category,graph) {\r\n        props.onGraphChange(category,graph);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    function dialogDone(category,graph,valueType){\r\n        props.newGraph(category,graph,valueType);\r\n        dialogClose();\r\n    }\r\n\r\n    function logout(){\r\n        window.location.href='/';\r\n    }\r\n\r\n    let menu_items=[];\r\n    let categories = [];\r\n    let graphs = [];\r\n\r\n    let graphs_button;\r\n\r\n    if(props.data.length > 0){\r\n        props.data.map((obj,index)=>{\r\n            menu_items.push(<p key={index} className='category-title'>{obj.name}</p>);\r\n            categories.push(obj.name);\r\n\r\n            if(obj.graphs.length > 0){\r\n                obj.graphs.map((obj,indexx)=>{\r\n                    menu_items.push(<MenuItem key={index + ','+indexx} onClick={ () => handleOption(index,indexx) }>{obj.name}</MenuItem>);\r\n                    graphs.push(obj);\r\n                });\r\n            }\r\n        });\r\n        graphs_button= <Button color=\"inherit\" onClick={handleClick}>Graphs</Button>;\r\n    }\r\n\r\n    return (\r\n        <div className='header-root'>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    {/* <IconButton edge=\"start\" className='header-button' color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton> */}\r\n\r\n                    {/* <Typography variant=\"h6\" className='logo-title'>\r\n                        Hey\r\n                    </Typography> */}\r\n                    {/* <Fab color=\"primary\" aria-label=\"add\" onClick={logout}> */}\r\n                        <ArrowBackIcon className=\"leave\"  onClick={logout} />\r\n                    {/* </Fab> */}\r\n\r\n                    <Typography variant=\"h6\" className='header-title'>\r\n                        {props.title}\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={dialogClick}>Add</Button>\r\n                    {graphs_button}\r\n                    <FormDialog open={open} dialogClose={dialogClose} categories={categories} newGraph={dialogDone}/>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        {menu_items}\r\n                    </Menu>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../../../../App.css';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nlet graph;\r\n\r\nexport default function DataDialog(props) {\r\n\r\n    const [disabled, setDisabled] = React.useState(true);\r\n    // const [data, setData] = React.useState(JSON.stringify(props.data,null,4));\r\n\r\n    function onInput(e){\r\n        graph = e.target.value;\r\n        // setData(graph);\r\n\r\n        if(graph.length === 0)\r\n            setDisabled(true);\r\n        else\r\n            setDisabled(false);\r\n    }\r\n\r\n    function submitHandle(){\r\n        props.graphUpdate(graph);\r\n        props.dialogClose();\r\n    }\r\n\r\n    // React.useEffect(()=>{\r\n    //     console.log(\"haha\");\r\n    // })\r\n\r\n    // let fields=[];\r\n    // props.data.map((o,ind)=>{\r\n    //     fields.push(<p key={ind}>{JSON.stringify(o)}</p>);\r\n    // });\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.dialogClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle>Raw data:</DialogTitle>\r\n            <DialogContent className=\"raw-data-area\">\r\n                {/* {fields} */}\r\n                <TextField\r\n                    placeholder=\"What have you done? ctrl z asap\"\r\n                    multiline={true}\r\n                    rows={9}\r\n                    rowsMax={15}\r\n                    // value={data}\r\n                    defaultValue={JSON.stringify(props.data,null,4)}\r\n                    fullWidth\r\n                    helperText=\"Change at your own risk\"\r\n                    onChange={onInput}\r\n                    />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                    <Button onClick={props.dialogClose} color=\"primary\" className=\"raw\">Leave</Button>\r\n                    <Button  disabled={disabled} onClick={submitHandle} color=\"primary\">Change</Button> \r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React from 'react';\r\nimport '../../../App.css';\r\nimport { VictoryChart,VictoryLine,VictoryAxis,VictoryVoronoiContainer,VictoryTooltip } from 'victory'\r\n\r\n// let label;\r\n\r\nclass Graph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.getLabel = this.getLabel.bind(this);\r\n        // gym(this.props.valueType);\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     gym(this.props.valueType);\r\n    // }\r\n\r\n    handleZoom(domain) {\r\n        this.setState({ selectedDomain: domain });\r\n    }\r\n\r\n    handleBrush(domain) {\r\n        this.setState({ zoomDomain: domain });\r\n    }\r\n\r\n\r\n    getLabel(){\r\n        if(this.props.gym)\r\n            return \"str\";\r\n        return this.props.valueType;\r\n    }\r\n\r\n    getLineLabel(datum){\r\n        // let a = ''; \r\n        // if(datum.datum.special_data)\r\n        //     a = ` | ${JSON.stringify(datum.datum.special_data)}`;\r\n        return `y: ${datum.datum.y}`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='graph-area'>\r\n                <VictoryChart width={800} height={350} scale={{ x: \"time\" }} animate={{\r\n                    duration: 500,\r\n                    onLoad: { duration: 500 }\r\n                    }}\r\n                    padding={{ left: 90, top: 50, right: 20, bottom: 50 }}\r\n                    containerComponent={\r\n                        <VictoryVoronoiContainer voronoiDimension=\"x\"\r\n                          labels={this.getLineLabel}\r\n                          labelComponent={<VictoryTooltip cornerRadius={0} flyoutStyle={{fill: \"white\"}}/>}\r\n                        />\r\n                      }\r\n                    // containerComponent={\r\n                    //     <VictoryZoomContainer responsive={true}\r\n                    //         zoomDimension=\"x\"\r\n                    //         zoomDomain={this.state.zoomDomain}\r\n                    //         onZoomDomainChange={this.handleZoom.bind(this)}\r\n                    //     />\r\n                    // }\r\n                >\r\n                    <VictoryLine\r\n                        style={{\r\n                            data: { stroke: \"tomato\" }\r\n                        }}\r\n                        data={this.props.data}\r\n                    />\r\n\r\n                    <VictoryAxis dependentAxis\r\n                        // theme={V.VictoryTheme.material}\r\n                        tickFormat={(t) => `${Math.round(t)} `+this.getLabel()}\r\n                        fixLabelOverlap={true}\r\n                        style={{ \r\n                            axis: {\r\n                            stroke: 'black',\r\n                            },\r\n                            ticks: {\r\n                            stroke: 'black',\r\n                            },\r\n                            tickLabels: {\r\n                            color: 'black',\r\n                            fill: 'black'\r\n                            }\r\n                        }}\r\n                        standalone={false}\r\n                    />\r\n\r\n                    <VictoryAxis\r\n                        standalone={false}\r\n                        style={{\r\n                        axis: {\r\n                            stroke: 'black',\r\n                        }\r\n                        }}\r\n                    />\r\n                </VictoryChart>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Graph;\r\n\r\n// function gym(valueType){\r\n//     if(valueType === \"gym\")\r\n//         label = \"volume\";\r\n//     else\r\n//         label=valueType;\r\n// }","import React from 'react';\r\nimport '../../../App.css';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataDialog from './DataDialog/DataDialog'\r\n\r\nconst weightType=\"kg\";\r\n\r\nclass Stats extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getLabel = this.getLabel.bind(this);\r\n        this.state = {open: false};\r\n    }\r\n\r\n    dialogClick = () => {\r\n        this.setState({open:true});\r\n     }; \r\n \r\n     dialogClose = () => {\r\n        this.setState({open:false});\r\n     };\r\n\r\n    getLabel(){\r\n        if(this.props.gym)\r\n            return \"str\";\r\n        return this.props.valueType;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='stats-area'>\r\n                {/* <Typography variant=\"h6\" className='header-title'>Stats:</Typography> */}\r\n                <Divider />\r\n                <p>Type: {this.getLabel()}</p>\r\n                <p>Last: {getLast(this.props.data)}</p>\r\n                <p>Highest: {getHighest(this.props.data)} </p>\r\n                <p>Lowest: {getLowest(this.props.data)} </p>\r\n                <p>Average: {getAverage(this.props.data)} </p>\r\n                <Button color=\"primary\" variant=\"contained\" onClick={this.dialogClick}>Raw Data</Button>\r\n                <DataDialog open={this.state.open} dialogClose={this.dialogClose} title={this.props.title} data={this.props.data}\r\n                 graphUpdate={this.props.graphUpdate}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stats;\r\n\r\n\r\nfunction getDate(date){\r\n    return date.toLocaleDateString('en-gb');\r\n}\r\n\r\nfunction getExtra(index,data){\r\n    let a = \"\";\r\n    if(data[index].special_data){\r\n        let thing = data[index].special_data;\r\n        a += \" | weight: \"+thing.weight+\" \"+weightType;\r\n        a += \", reps: \"+ thing.reps;\r\n        a += \", sets: \"+thing.sets;\r\n    }\r\n    // return JSON.stringify(data[index].special_data);\r\n    return a;\r\n}\r\n\r\nfunction getLast(data){\r\n    let index = data.length -1;\r\n    return data[index].y + \" at \"+getDate(data[index].x)+\" \"+getExtra(index,data);\r\n}\r\n\r\nfunction getHighest(data){\r\n    let index=0;\r\n    let max=0;\r\n\r\n    data.map(function(o,ind){\r\n        if(o.y > max){\r\n            max = o.y;\r\n            index = ind;\r\n        }\r\n    });\r\n    return max + \" at \"+getDate(data[index].x)+\" \"+getExtra(index,data);\r\n}\r\n\r\nfunction getLowest(data){\r\n    let index=0;\r\n    let lowest=data[0].y;\r\n\r\n    data.map(function(o,ind){\r\n        if(o.y < lowest){\r\n            lowest = o.y;\r\n            index = ind;\r\n        }\r\n    });\r\n    return lowest + \" at \"+getDate(data[index].x)+\" \"+getExtra(index,data);\r\n}\r\n\r\nfunction getAverage(data){\r\n    return data.reduce((r, c) => r + c.y, 0) / data.length;\r\n}","import React from 'react';\r\nimport '../../../../App.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nlet value=0;\r\nlet weight,reps,sets = 0;\r\nlet special = false;\r\nlet special_data;\r\n\r\nexport default class AddDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { date: new Date()};\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        // this.handleSpecialForm = this.handleSpecialForm.bind(this);\r\n        this.handleNormalForm = this.handleNormalForm.bind(this);\r\n    }\r\n\r\n    handleDateChange(date){\r\n        this.setState({date: date});\r\n    }\r\n\r\n    // handleSpecialForm(e){\r\n    //     let id = e.target.id;\r\n    // }\r\n\r\n    handleNormalForm(e){\r\n        value = validateNumber(e.target.value)\r\n    }\r\n\r\n    onSubmit(){\r\n        if(this.props.gym)\r\n            validateSpecialForm();\r\n        else{\r\n            special = false;\r\n            special_data = {};\r\n        }\r\n        \r\n        this.props.newValue(this.state.date,value, this.props.category, this.props.graph, special, special_data);\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        let extrafields =[];\r\n        let extrafield;\r\n        if(this.props.gym){\r\n            extrafields.push( <TextField  key=\"annoyingshit1\" label=\"weight(kg)\" variant=\"outlined\" type=\"number\" id=\"weight\"\r\n            onChange={(e)=> weight=e.target.value}\r\n            style={ {margin: '0 0 0 0',width: '25%'}} helperText='example: 20' /> );\r\n\r\n            extrafields.push( <TextField  key=\"annoyingshit2\" label=\"reps\" variant=\"outlined\" type=\"number\" id=\"reps\"\r\n            onChange={(e)=> reps=e.target.value}\r\n            style={ {margin: '0 0 0 20px',width: '25%'}} helperText='example: 8' /> );\r\n\r\n            extrafields.push( <TextField   key=\"annoyingshit3 \"label=\"sets\" variant=\"outlined\" type=\"number\" id=\"sets\"\r\n            onChange={(e)=> sets=e.target.value} \r\n            style={  {margin: '0 0 0 20px',width: '25%'}} helperText='example: 3' /> );\r\n\r\n            extrafield = <div className=\"form-formula\">{extrafields}</div>\r\n        }\r\n        else{\r\n        extrafield = <TextField style={{  padding: '0 0 0 0' }} required={!this.props.gym} label=\"Value\" variant=\"outlined\"\r\n        fullWidth type=\"number\" onChange={this.handleNormalForm} />\r\n        }\r\n\r\n        return(\r\n            <div>\r\n            <Dialog open={this.props.open} onClose={this.props.dialogClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add value to {this.props.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Add some value\r\n                    </DialogContentText>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"time\"\r\n                            value={this.state.date}\r\n                            fullWidth\r\n                            onChange={this.handleDateChange}\r\n                            style={{  padding: '0 0 30px 0' }}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    {extrafield}\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.dialogClose} color=\"primary\">\r\n                        nah\r\n                </Button>\r\n                    <Button onClick={()=> this.onSubmit()}\r\n                    color=\"primary\">\r\n                        Add\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nfunction validateNumber(num){\r\n    let value;\r\n    num = parseInt(num);\r\n\r\n    if(isNaN(num))\r\n        value=0\r\n    else\r\n        value=num;\r\n    return value;\r\n}\r\n\r\nfunction validateSpecialForm(){\r\n    weight = validateNumber(weight);\r\n    reps = validateNumber(reps);\r\n    sets = validateNumber(sets);\r\n\r\n    formula();\r\n    special=true;\r\n    special_data={weight: weight, reps: reps, sets: sets};\r\n}\r\n\r\nfunction formula()\r\n{\r\n    console.log(reps);\r\n    if(reps === 0){\r\n        value=0;\r\n        return;\r\n    }\r\n    console.log(\"i leave\");\r\n    // value = weight * reps * sets;\r\n    value = (weight * ((reps/30)+1)) * sets;\r\n}\r\n","import React from 'react';\r\nimport '../../../App.css';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddDialog from './AddDialog/AddDialog';\r\n\r\nexport default function Add(props){\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const dialogClick = () => {\r\n       setOpen(true);\r\n    }; \r\n\r\n    const dialogClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    function dialogDone(date,value,category, graph, special, special_data){\r\n        props.newValue(date,value,category,graph, special, special_data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-div\">\r\n            <Fab color=\"primary\" aria-label=\"add\" onClick={dialogClick}>\r\n                <AddIcon/>\r\n            </Fab>\r\n            <AddDialog open={open} dialogClose={dialogClose} title={props.title} newValue={dialogDone} category={props.category}\r\n            graph={props.graph} gym={props.gym}/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport '../../../../App.css';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function Wtf(props) {\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.dialogClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle>Delete {props.title}?</DialogTitle>\r\n            <DialogActions>\r\n                    <Button onClick={props.dialogClose} color=\"primary\" className=\"raw\">No</Button>\r\n                    <Button onClick={props.dialogDone}\r\n                    color=\"primary\">\r\n                        Delete\r\n                </Button> \r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport '../../../App.css';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Wtf from './Wtf/Wtf';\r\n\r\nexport default function Options(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const dialogClick = () => {\r\n       setOpen(true);\r\n    }; \r\n\r\n    const dialogClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const dialogDone = () => {\r\n        props.delete();\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"options\" dir=\"rtl\">\r\n            <DeleteIcon onClick={dialogClick}/>\r\n            <Wtf open={open} dialogClose={dialogClose} dialogDone={dialogDone} title={props.title}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport '../../App.css';\r\nimport Graph from './Graph/Graph';\r\nimport Stats from './Stats/Stats';\r\nimport Add from './Add/Add'\r\nimport Options from './Options/Options'\r\n\r\nclass Content extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    isGym(){\r\n        return (this.props.valueType === \"gym\")\r\n    }\r\n\r\n    render() {\r\n\r\n        let stats = <div className='stats-area'>Add some values to graph</div>\r\n        if(this.props.data.length > 0)\r\n            stats = <Stats valueType={this.props.valueType} data={this.props.data} gym={ this.isGym() } graphUpdate={this.props.graphUpdate}/>;\r\n        \r\n        return (\r\n            <>\r\n            <div className='content'>\r\n                <Graph data={this.props.data} valueType={this.props.valueType} gym={ this.isGym() }/>\r\n                <Options delete={this.props.delete} title={this.props.title}/>\r\n                {stats}\r\n            </div>\r\n            <Add title={this.props.title} newValue={this.props.newValue} category={this.props.category}\r\n             graph={this.props.graph} gym={ this.isGym() }/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;\r\n\r\n\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport default function Nothing(props) {\r\n\r\n\r\n    return (\r\n        <div className=\"nothing\">\r\n            <Paper className={'login-paper'}>\r\n                Nothing here yet, add a graph!\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Content from './components/Content/Content';\r\nimport axios from 'axios';\r\nimport Nothing from './components/Nothing'\r\n\r\n\r\nlet data = [];\r\n\r\n// let data = [{\r\n//   name: \"games\",\r\n//   graphs: [{\r\n//     name: \"Roofcampers in rust\",\r\n//     type: \"noobs\",\r\n//     data: [{ x: new Date(2013, 1, 1), y: 140 },\r\n//     { x: new Date(1987, 1, 1), y: 12 },\r\n//     { x: new Date(1993, 1, 1), y: 14 },\r\n//     { x: new Date(1997, 1, 1), y: 18 },\r\n//     { x: new Date(2001, 1, 1), y: 52 },\r\n//     { x: new Date(2005, 1, 1), y: 80 },\r\n//     { x: new Date(2011, 1, 1), y: 150 },\r\n//     { x: new Date(2015, 1, 1), y: 170 }]\r\n//   },\r\n//   {\r\n//     name: \"Balanced matches in dota\",\r\n//     type: \"matches\",\r\n//     data: [{ x: new Date(2013, 1, 1), y: 400 },\r\n//     { x: new Date(1987, 1, 1), y: 320 },\r\n//     { x: new Date(1993, 1, 1), y: 280 },\r\n//     { x: new Date(1997, 1, 1), y: 150 },\r\n//     { x: new Date(2001, 1, 1), y: 210 },\r\n//     { x: new Date(2005, 1, 1), y: 120 },\r\n//     { x: new Date(2011, 1, 1), y: 80 },\r\n//     { x: new Date(2015, 1, 1), y: 2 }]\r\n//   }\r\n//   ]\r\n// },\r\n// {\r\n//   name: \"ugh\",\r\n//   graphs: [{\r\n//     name: \"uga\",\r\n//     type: \"meme\",\r\n//     data: [{ x: new Date(2013, 1, 1), y: 140 },\r\n//     { x: new Date(1987, 1, 1), y: 12 },\r\n//     { x: new Date(1993, 1, 1), y: 14 },\r\n//     { x: new Date(1997, 1, 1), y: 18 },\r\n//     { x: new Date(2001, 1, 1), y: 52 },\r\n//     { x: new Date(2005, 1, 1), y: 80 },\r\n//     { x: new Date(2011, 1, 1), y: 150 },\r\n//     { x: new Date(2015, 1, 1), y: 170 }]\r\n//   },\r\n//   {\r\n//     name: \"dada\",\r\n//     type: \"xd\",\r\n//     data: [{ x: new Date(2013, 1, 1), y: 400 },\r\n//     { x: new Date(1987, 1, 1), y: 320 },\r\n//     { x: new Date(1993, 1, 1), y: 280 },\r\n//     { x: new Date(1997, 1, 1), y: 150 },\r\n//     { x: new Date(2001, 1, 1), y: 210 },\r\n//     { x: new Date(2005, 1, 1), y: 120 },\r\n//     { x: new Date(2011, 1, 1), y: 80 },\r\n//     { x: new Date(2015, 1, 1), y: 2 }]\r\n//   }\r\n//   ]\r\n// }\r\n// ]\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if(data.length > 0){\r\n      this.first = data[0];\r\n\r\n      this.state = { current: { name: this.first.graphs[0].name,\r\n      type: this.first.graphs[0].type,\r\n      data: this.first.graphs[0].data, category: 0, graph: 0 } };\r\n\r\n    }\r\n    else\r\n      this.state = { };\r\n\r\n    this.onGraphChange = this.onGraphChange.bind(this);\r\n    this.newValue= this.newValue.bind(this);\r\n    this.newGraph= this.newGraph.bind(this);\r\n    this.delete= this.delete.bind(this);\r\n    this.graphUpdate= this.graphUpdate.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let a = await getData();\r\n    data = a;\r\n\r\n    data.map(c =>{\r\n      c.graphs.map(g=> {\r\n        g.data.map( o=>{\r\n          o.x = new Date(o.x);\r\n        })\r\n      })\r\n    })\r\n\r\n    if(data.length > 0){\r\n      this.first = data[0];\r\n\r\n      this.setState ({ current: { name: this.first.graphs[0].name,\r\n      type: this.first.graphs[0].type,\r\n      data: this.first.graphs[0].data, category: 0, graph: 0 } });\r\n    }\r\n    document.title=\"Progress View\";\r\n  }\r\n\r\n  async newValue(date,value,category,graph, special, special_data){\r\n    if(!special)\r\n      data[category].graphs[graph].data.push({x: date, y: parseInt(value)});\r\n    else\r\n      data[category].graphs[graph].data.push({x: date, y: parseInt(value), special_data: special_data});\r\n\r\n    await saveData(data);\r\n\r\n    this.setState({ current: { name: data[category].graphs[graph].name,\r\n    type: data[category].graphs[graph].type,\r\n    data: data[category].graphs[graph].data,\r\n    category: category, graph: graph } });\r\n\r\n  }\r\n\r\n  async newGraph(category,graph,valueType){\r\n    let a = newGraphParse(category,graph,valueType)\r\n    let category_index = a.category_index;\r\n    let graph_index = a.graph_index;\r\n\r\n    await saveData(data);\r\n\r\n    this.setState({ current: { name: data[category_index].graphs[graph_index].name,\r\n    type: data[category_index].graphs[graph_index].type,\r\n    data: data[category_index].graphs[graph_index].data,\r\n    category: category_index, graph: graph_index } });\r\n  }\r\n\r\n  onGraphChange(category,graph) {\r\n    this.setState({ current: { name: data[category].graphs[graph].name,\r\n    type: data[category].graphs[graph].type,\r\n    data: data[category].graphs[graph].data, \r\n    category: category, graph: graph } });\r\n  }\r\n\r\n  async delete(){\r\n    let cat = this.state.current.category;\r\n    let grf = this.state.current.graph;\r\n    data[cat].graphs.splice(grf,1);\r\n    if(data[cat].graphs.length === 0)\r\n      data.splice(cat,1);\r\n    \r\n    await saveData(data);\r\n\r\n    if(data.length > 0){\r\n      let first = data[0];\r\n      this.setState( { current: { name: first.graphs[0].name,\r\n        type: first.graphs[0].type,\r\n        data: first.graphs[0].data, category: 0, graph: 0 } });\r\n    }\r\n    else{\r\n      this.setState({nothing: true})\r\n    }\r\n  }\r\n\r\n  async graphUpdate(graph){\r\n    let parsed\r\n    try{\r\n      parsed = JSON.parse(graph);\r\n    } catch(e){\r\n      return;\r\n    }\r\n    parsed.map(o =>{\r\n      o.x = new Date(o.x);\r\n    })\r\n    let cat = this.state.current.category;\r\n    let grf = this.state.current.graph;\r\n    data[cat].graphs[grf].data = parsed;\r\n    let current = data[cat].graphs[grf];\r\n\r\n    await saveData(data);\r\n\r\n    this.setState( { current: { name: current.name, type: current.type, data: parsed, category: cat, graph: grf } });\r\n  }\r\n\r\n  render() {\r\n\r\n    let content = <Nothing/>;\r\n    let header = <Header title={\"\"} onGraphChange={this.onGraphChange} data={data} newGraph={this.newGraph}/>\r\n\r\n    if(data.length > 0){\r\n      content = <Content data={this.state.current.data} title={this.state.current.name} newValue={this.newValue} category={this.state.current.category}\r\n      graph={this.state.current.graph} valueType={this.state.current.type} delete={this.delete} graphUpdate={this.graphUpdate}/>\r\n\r\n      header = <Header title={this.state.current.name} onGraphChange={this.onGraphChange} data={data} newGraph={this.newGraph}/>\r\n    }\r\n    return (\r\n      <>\r\n        {header}\r\n        {content}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nfunction newGraphParse(category,graph,valueType){\r\n  let newcategory = true;\r\n    let category_index=0;\r\n    let graph_index=0;\r\n\r\n    data.map((obj,index)=>{\r\n        if(obj.name === category){\r\n            graph_index = data[index].graphs.length;\r\n            category_index  = index;\r\n            newcategory = false;\r\n            data[index].graphs.push({name: graph, type: valueType, data: []});\r\n        }\r\n    });\r\n\r\n    if(newcategory){\r\n        category_index = data.length;\r\n        let new_graph = [{name: graph,type: valueType, data: []}];\r\n        data.push({name: category, graphs: new_graph});\r\n    }\r\n\r\n    return {category_index,graph_index};\r\n}\r\n\r\n\r\nasync function getData(){\r\n    try{\r\n      let res = await axios.get('/api');\r\n      if(res.status){\r\n          return res.data.data;\r\n      }\r\n      else\r\n          alert(\"error\");\r\n  }\r\n  catch{\r\n      alert(\"error contacting server\");\r\n  }\r\n  return [];\r\n}\r\n\r\nasync function saveData(data){\r\n  try{\r\n    let res = await axios.post('/api/update',{data:data});\r\n    if(res.status){\r\n        console.log(res.data.msg);\r\n    }\r\n    else\r\n        alert(\"error\");\r\n  }\r\n  catch{\r\n      alert(\"error contacting server\");\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Init from './init'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Init />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport App from './App';\r\n\r\nexport default function Init() {\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path='/' component={Login} />\r\n                <Route path='/app' component={App} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}"],"sourceRoot":""}